{
    "extension": {
      "extensionList": {
        "spot": "true"
      }
    },
    "remoteCommand": "/bin/bash",
    "args": [
      "-c",
      "#!/bin/sh\\n\\n# See: https://biocontainers-edu.readthedocs.io/en/latest/running_example.html\\n# cd /Users/yperez/workplace   # Replace by your path\\n# mkdir host-data\\n# docker run biocontainers/blast:2.2.31 blastp -help\\n# docker run -v `pwd`/host-data/ biocontainers/blast:2.2.31 curl -O ftp://ftp.ncbi.nih.gov/refseq/D_rerio/mRNA_Prot/zebrafish.1.protein.faa.gz\\n# docker run -v `pwd`/host-data/:/data/ biocontainers/blast:2.2.31 gunzip zebrafish.1.protein.faa.gz\\n# docker run -v `pwd`/host-data/:/data/ biocontainers/blast:2.2.31 makeblastdb -in zebrafish.1.protein.faa -dbtype prot\\n# docker run biocontainers/blast:2.2.31 curl https://www.uniprot.org/uniprot/P04156.fasta >> host-data/P04156.fasta\\n# docker run -v `pwd`/host-data/:/data/ biocontainers/blast:2.2.31 blastp -query P04156.fasta -db zebrafish.1.protein.faa -out results.txt\\n\\n# we run all at once; just a shell script embedded in the \\n# binary running in the container\\n\\nblastp -help\\ncurl -O ftp://ftp.ncbi.nih.gov/refseq/D_rerio/mRNA_Prot/zebrafish.1.protein.faa.gz\\ngunzip zebrafish.1.protein.faa.gz\\nmakeblastdb -in zebrafish.1.protein.faa -dbtype prot\\ncurl https://rest.uniprot.org/uniprotkb/P04156.fasta > P04156.fasta\\necho \"P04156.fasta\"\\ncat P04156.fasta\\necho \"Running blastp\"\\nblastp -query ./P04156.fasta -db zebrafish.1.protein.faa -out results.txt\\necho \"Results\"\\ncat results.txt\\necho \"Copy results to host shared directory\"\\ncp results.txt /host\\n"
    ],
    "jobCategory": "biocontainers/blast:2.2.31",
    "minSlots": 1,
    "maxSlots": 1,
    "candidateMachines": [
      "e2-standard-4"
    ],
    "stageOutFiles": {
      "/host": "gs://<YOUR_BUCKET>/results.txt"
    },
    "resourceLimits": {
      "cpumilli": "4000",
      "runtime": "30m"
    }
}